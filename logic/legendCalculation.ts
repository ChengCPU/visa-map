const colors:string[] = ["abkhaziaColor","afghanistanColor","albaniaColor","algeriaColor","americanSamoaColor","andorraColor","angolaColor","anguillaColor","antiguaAndBarbudaColor","argentinaColor","armeniaColor","arubaColor","australiaColor","austriaColor","azerbaijanColor","bahamasColor","bahrainColor","bangladeshColor","barbadosColor","belarusColor","belgiumColor","belizeColor","beninColor","bermudaColor","bhutanColor","boliviaColor","bonaireColor","bosniaAndHerzegovinaColor","botswanaColor","bouvetIslandColor","brazilColor","britishIndianOceanTerritory","britishVirginIslandsColor","bruneiColor","bulgariaColor","burkinaFasoColor","burundiColor","cambodiaColor","cameroonColor","canadaColor","capeVerdeColor","caymanIslandsColor","centralAfricanRepublicColor","chadColor","chileColor","chinaColor","colombiaColor","comorosColor","cookIslandsColor","costaRicaColor","croatiaColor","cubaColor","curacaoColor","cyprusColor","czechRepublicColor","democraticRepublicOfTheCongoColor","denmarkColor","djiboutiColor","dominicaColor","dominicanRepublicColor","eastTimorColor","ecuadorColor","egyptColor","elSalvadorColor","equatorialGuineaColor","eritreaColor","estoniaColor","eswatiniColor","ethiopiaColor","falklandIslandsColor","faroeIslandsColor","fijiColor","finlandColor","franceColor","frenchGuianaColor","frenchPolynesiaColor","gabonColor","gambiaColor","georgiaColor","germanyColor","ghanaColor","gibraltarColor","greeceColor","greenlandColor","grenadaColor","guadeloupeColor","guamColor","guatemalaColor","guernseyColor","guineaColor","guineaBissauColor","guyanaColor","haitiColor","heardIslandAndMcDonaldIslandsColor","hondurasColor","hongKongColor","hungaryColor","icelandColor","indiaColor","indonesiaColor","iranColor","iraqColor","irelandColor","isleOfManColor","israelColor","italyColor","ivoryCoastColor","jamaicaColor","janMayenColor","japanColor","jerseyColor","jordanColor","kazakhstanColor","kenyaColor","kiribatiColor","kosovoColor","kuwaitColor","kyrgyzstanColor","laosColor","latviaColor","lebanonColor","lesothoColor","liberiaColor","libyaColor","liechtensteinColor","lithuaniaColor","luxembourgColor","macaoColor","madagascarColor","malawiColor","malaysiaColor","maldivesColor","maliColor","maltaColor","marshallIslandsColor","martiniqueColor","mauritaniaColor","mauritiusColor","mayotteColor","mexicoColor","micronesiaColor","moldovaColor","monacoColor","mongoliaColor","montenegroColor","montserratColor","moroccoColor","mozambiqueColor","myanmarColor","namibiaColor","nauruColor","nepalColor","netherlandsColor","newCaledoniaColor","newZealandColor","nicaraguaColor","nigerColor","nigeriaColor","niueColor","norfolkIslandColor","northernCyprusColor","northernMarianaIslandsColor","northKoreaColor","northMacedoniaColor","norwayColor","omanColor","pakistanColor","palauColor","palestineColor","panamaColor","papuaNewGuineaColor","paraguayColor","peruColor","philippinesColor","pitcairnIslandsColor","polandColor","portugalColor","qatarColor","republicOfTheCongoColor","reunionColor","romaniaColor","russiaColor","rwandaColor","sabaColor","saintBarthelemyColor","saintHelenaColor","saintKittsAndNevisColor","saintLuciaColor","saintMartinColor","saintPierreAndMiquelonColor","saintVincentAndTheGrenadinesColor","samoaColor","sanMarinoColor","saoTomeAndPrincipeColor","saudiArabiaColor","senegalColor","serbiaColor","seychellesColor","sierraLeoneColor","singaporeColor","sintEustatiusColor","sintMaartenColor","slovakiaColor","sloveniaColor","solomonIslandsColor","somaliaColor","southAfricaColor","southGeorgiaAndTheSouthSandwichIslandsColor","southKoreaColor","southOssetiaColor","southSudanColor","spainColor","sriLankaColor","sudanColor","surinameColor","svalbardColor","swedenColor","switzerlandColor","syriaColor","taiwanColor","tajikistanColor","tanzaniaColor","thailandColor","togoColor","tokelauColor","tongaColor","transnistriaColor","trinidadAndTobagoColor","tunisiaColor","turkeyColor","turkmenistanColor","turksAndCaicosColor","tuvaluColor","ugandaColor","ukraineColor","unitedArabEmiratesColor","unitedKingdomColor","unitedStatesColor","unitedStatesVirginIslandsColor","uruguayColor","uzbekistanColor","vanuatuColor","vaticanCityColor","venezuelaColor","vietnamColor","wallisAndFutunaColor","westernSaharaColor","yemenColor","zambiaColor","zimbabweColor"]
type Legend = {HC: boolean, FoM: boolean, OECSFoM: boolean, MFoM: boolean, EUFoM: boolean, GCCFoM: boolean, VF: boolean, VoAEV: boolean, VoA: boolean, EV: boolean, SP: boolean, CR: boolean}

export default function legendCalculation(priority:object, legend:Legend, setLegend:Function, rerender:boolean, setRerender:Function) {
  for(let legendCalculationMain = 0; legendCalculationMain < colors.length; legendCalculationMain++) {
    switch(priority[colors[legendCalculationMain]]) {
      case "rgb(255,20,147)": setLegend(legend, legend.HC = true); setRerender(!rerender); break;
      case "rgb(255,145,0)": setLegend(legend, legend.OECSFoM = true); setRerender(!rerender); break;
      case "rgb(0,135,93)": setLegend(legend, legend.MFoM = true); setRerender(!rerender); break;
      case "rgb(0,51,153)": setLegend(legend, legend.EUFoM = true); setRerender(!rerender); break;
      case "rgb(153,123,61)": setLegend(legend, legend.GCCFoM = true); setRerender(!rerender); break;
      case "rgb(255,179,191)": setLegend(legend, legend.FoM = true); setRerender(!rerender); break;
      case "rgb(50,205,50)": setLegend(legend, legend.VF = true); setRerender(!rerender); break;
      case "rgb(161,224,123)": setLegend(legend, legend.VoAEV = true); setRerender(!rerender); break;
      case "rgb(255,255,92)": setLegend(legend, legend.VoA = true); setRerender(!rerender); break;
      case "rgb(135,206,250)": setLegend(legend, legend.EV = true); setRerender(!rerender); break;
      case "rgb(118,65,171)": setLegend(legend, legend.SP = true); setRerender(!rerender); break;
      case "rgb(0,0,0)": setLegend(legend, legend.CR = true); setRerender(!rerender); break;
    }
  }
  for(let specialPermitCalculation = 0; specialPermitCalculation < colors.length; specialPermitCalculation++) {
    if(priority[colors[specialPermitCalculation]] == "rgb(118,65,171)") {return}
    if(specialPermitCalculation == colors.length - 1) {setLegend(legend, legend.SP = false)}
  }
}